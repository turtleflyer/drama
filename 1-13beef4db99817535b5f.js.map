{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./src/utils/replaceDOM.js","webpack:///../drama-core/src/drama-core.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/cell.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/matrix.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/messages.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/restartButton.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/tic-tac-toe.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/analyzePossibleWin.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/src/stage.js","webpack:////mnt/d/@turtlefly/Code/drama_project/drama/examples/tic-tac-toe/index.js","webpack:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.map.js"],"names":["_setPrototypeOf","o","p","module","exports","Object","setPrototypeOf","__proto__","replaceDOM","buildDOM","_React$Component","Replaced","props","_this","call","this","myRef","React","createRef","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_0___default","_proto","prototype","componentDidMount","placeholder","parentNode","replaceChild","render","_this2","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","ref","el","Component","EventsWork","eventsStore","Map","elementsMap","customEventTypes","Set","onAddElementActionsMap","exhaustTypesMap","routine","interpretTarget","t","propagationKey","Symbol","nullKey","parentKey","addElementEventType","registerEventType","RoleSet","invokeRoleSetClass","worker","fireFromQueueType","fireFromQueueId","queueData","countTypesInQueue","name","eventChain","roleSet","type","action","length","_this$queueData$shift","shift","target","event","fireEvent","countType","get","has","delete","set","Promise","resolve","then","_this$getCallback","getCallback","defineRoutine","bind","managePropagation","stopBubbling","stopPropagatingNested","setActionOnAddElement","waitWhenTypeExhausted","getSomeFromDeep","obj","key","create","toGet","getFromDeepMap","map","deepMap","next","_ref","defaultPropagation","assign","add","option","applyDefaultPropagation","stageCallback","ancestor","getAncestor","belong","mapOfTypes","toConsumableArray_default","entries","forEach","typeEntry","eventID","handle","grandAncestorEntry","addCallback","elementEntry","setOfTypes","addEventListener","addCallbackToChildren","parent","_this3","size","element","combineTypes","types","collectedTypes","concat","keys","filter","parentEntry","parentClass","_Set","elements","_this4","e","assertThisInitialized_default","apply","arguments","inheritsLoose_default","_proto2","addElement","deleteElement","addElements","_this5","clearElements","_this6","wrapNativeSuper_default","invokePromiseHandle","promiseHandle","promise","waitGroupEvent","_EventsWork$invokePro","_this7","_this$getCallback2","toProcess","_ref2","push","description","_this8","typeRegistered","checkIfTerminate","furtherDescription","getID","arg","getType","_EventsWork$invokePro2","cellStyle","border","width","height","position","display","background-color","markAsWinStyle","matrixContainer","document","createElement","buildMatrix","Cell","matrix","i","cell","appendChild","node","textMessageStyle","line-height","font-style","color","font-size","messageContainer","clearMessages","firstChild","removeChild","style","postTextMessage","str","message","createTextNode","window","setTimeout","restartButton","innerText","winMessages","turns","_Object$assign","commonStyle","left","top","backgroundColor","margin","border-radius","first","second","transform","resetCell","markAsWin","gameMatrix","emptyCells","currentTurn","xAndOs","turn","filledCells","possibleWin","_i","_winPatterns","winCells","_iterator","_isArray","Array","isArray","_i2","iterator","done","value","cellN","includes","analyzePossibleWin","indexOf","sort","a","b","keepState","n","createStage","stage","box-sizing","setCell","onclick","__webpack_require__","d","__webpack_exports__","getPrototypeOf","isNativeFunction","construct","_wrapNativeSuper","Class","_cache","undefined","TypeError","Wrapper","constructor","enumerable","writable","configurable","_getPrototypeOf","fn","Function","toString","_construct","Parent","args","Reflect","sham","Proxy","Date","isNativeReflectConstruct","instance","dP","f","FProto","nameRE","match","strong","validate","entry","getEntry","v","def"],"mappings":"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","file":"1-13beef4db99817535b5f.js","sourcesContent":["function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","import React from 'react';\r\n\r\nexport default function replaceDOM(buildDOM) {\r\n  return class Replaced extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.placeholder.parentNode.replaceChild(buildDOM(), this.placeholder);\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div\r\n          ref={(el) => {\r\n            this.placeholder = el;\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","class EventsWork {\r\n  constructor() {\r\n    /**\r\n     *   eventsStore structure:\r\n     *  Map(\r\n     *    [roleSet, Map(\r\n     *      [type, Map(\r\n     *        [eventID, promiseHandle]\r\n     *      )]\r\n     *    )]\r\n     *  )\r\n     */\r\n    this.eventsStore = new Map();\r\n\r\n    /**\r\n     *  elementsMap structure:\r\n     *  Map(\r\n     *    [element, { roleSet, types: Set of types }]\r\n     *  )\r\n     *\r\n     */\r\n    this.elementsMap = new Map();\r\n    this.customEventTypes = new Set();\r\n    this.onAddElementActionsMap = new Map();\r\n    this.exhaustTypesMap = new Map();\r\n    this.routine = { interpretTarget: t => t };\r\n    this.propagationKey = Symbol('propagationKey');\r\n    this.nullKey = Symbol('@@eventswork/nullKey');\r\n    this.parentKey = Symbol('@@eventswork/parentKey');\r\n    this.addElementEventType = Symbol('@@addElement');\r\n    this.registerEventType(this.addElementEventType);\r\n    this.RoleSet = this.invokeRoleSetClass();\r\n    this.worker = new this.RoleSet([]);\r\n    this.fireFromQueueType = Symbol('@@eventswork/fireFromQueue');\r\n    this.fireFromQueueId = Symbol('@@eventswork/fireFromQueueId');\r\n    this.queueData = [];\r\n    this.countTypesInQueue = new Map();\r\n\r\n    this.worker.name = '@@worker';\r\n\r\n    this.eventChain(\r\n      {\r\n        roleSet: this.worker,\r\n        type: this.fireFromQueueType,\r\n        action: () => {\r\n          if (this.queueData.length > 0) {\r\n            const { target, type, event } = this.queueData.shift();\r\n            this.fireEvent(target, type, event);\r\n\r\n            // Look if waitWhenTypeExhausted for this type has been activated\r\n            const countType = this.countTypesInQueue.get(type) - 1;\r\n            if (countType === 0 && this.exhaustTypesMap.has(type)) {\r\n              // Fulfill the according promise sending the name of the type to it\r\n              this.exhaustTypesMap.get(type)(type);\r\n              this.exhaustTypesMap.delete(type);\r\n            }\r\n            this.countTypesInQueue.set(type, countType);\r\n\r\n            // Next call of fireEvent of fireFomQueueType is doing asynchronously to\r\n            // make a chance to\r\n            // fulfill the according promise and create the new one for\r\n            // the next target form the queue\r\n            // prettier-ignore\r\n            Promise.resolve().then(\r\n              () => this.getCallback(\r\n                { [this.nullKey]: true, [this.parentKey]: this.worker },\r\n                this.fireFromQueueType,\r\n              )(),\r\n            );\r\n          }\r\n        },\r\n      },\r\n      this.fireFromQueueId,\r\n    );\r\n\r\n    this.defineRoutine = this.defineRoutine.bind(this);\r\n    this.managePropagation = this.managePropagation.bind(this);\r\n    this.stopBubbling = this.stopBubbling.bind(this);\r\n    this.stopPropagatingNested = this.stopPropagatingNested.bind(this);\r\n    this.setActionOnAddElement = this.setActionOnAddElement.bind(this);\r\n    this.fireEvent = this.fireEvent.bind(this);\r\n    this.eventChain = this.eventChain.bind(this);\r\n    this.waitWhenTypeExhausted = this.waitWhenTypeExhausted.bind(this);\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @function\r\n   * @name whatToDo\r\n   * @returns {*}\r\n   */\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {Onject|Map} obj\r\n   * @param {*} key\r\n   * @param {whatToDo} create\r\n   * @returns\r\n   */\r\n  static getSomeFromDeep(obj, key, create) {\r\n    let toGet;\r\n    if (obj instanceof Map) {\r\n      toGet = obj.get(key);\r\n    } else {\r\n      toGet = obj[key];\r\n    }\r\n    if (!toGet) {\r\n      toGet = create();\r\n      if (obj instanceof Map) {\r\n        obj.set(key, toGet);\r\n      } else {\r\n        obj[key] = toGet;\r\n      }\r\n    }\r\n    return toGet;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @typedef {Object} Returned\r\n   * @property {Map} map\r\n   * @property {getFromDeepMap.bind} next\r\n   */\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {Map} map\r\n   * @param {*} key\r\n   * @returns {Returned}\r\n   *\r\n   */\r\n  static getFromDeepMap(map, key) {\r\n    const deepMap = EventsWork.getSomeFromDeep(map, key, () => new Map());\r\n    return { map: deepMap, next: EventsWork.getFromDeepMap.bind(null, deepMap) };\r\n  }\r\n\r\n  defineRoutine({ interpretTarget, defaultPropagation }) {\r\n    Object.assign(this.routine, { interpretTarget, defaultPropagation });\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {*} type\r\n   * @memberof EventsWork\r\n   */\r\n  registerEventType(type) {\r\n    this.customEventTypes.add(type);\r\n  }\r\n\r\n  managePropagation(event, option) {\r\n    // eslint-disable-next-line\r\n    const { stopBubbling, stopPropagatingNested } = option;\r\n    if (!event[this.propagationKey]) {\r\n      event[this.propagationKey] = {};\r\n    }\r\n    Object.assign(event[this.propagationKey], {\r\n      // If stopBubbling is assigned true its value changes by empty set (still get true value)\r\n      stopBubbling: stopBubbling ? new Set() : null,\r\n      stopPropagatingNested,\r\n    });\r\n    return event;\r\n  }\r\n\r\n  stopBubbling(event = {}) {\r\n    this.managePropagation(event, { stopBubbling: true });\r\n    // eslint-disable-next-line\r\n    event.stopPropagatingNested = this.stopPropagatingNested.bind(null, event);\r\n    return event;\r\n  }\r\n\r\n  stopPropagatingNested(event = {}) {\r\n    this.managePropagation(event, { stopPropagatingNested: true });\r\n    event.stopBubbling = this.stopBubbling.bind(null, event);\r\n    return event;\r\n  }\r\n\r\n  applyDefaultPropagation(event) {\r\n    if (!event[this.propagationKey]) {\r\n      event[this.propagationKey] = {};\r\n      const { defaultPropagation } = this.routine;\r\n      if (defaultPropagation) {\r\n        this.managePropagation(event, defaultPropagation);\r\n      }\r\n    }\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * Function returns the callback to attach to event listener\r\n   *\r\n   * @param {EventsWork} context\r\n   * @param {Element} target\r\n   * @param {*} type\r\n   * @returns {callback}\r\n   */\r\n  getCallback(target, type) {\r\n    // eslint-disable-next-line\r\n    const stageCallback = (target, type, event, ancestor) => {\r\n      let getAncestor = ancestor;\r\n      if (!ancestor) {\r\n        getAncestor = target[this.parentKey] || this.elementsMap.get(target).belong;\r\n      }\r\n      const mapOfTypes = EventsWork.getFromDeepMap(this.eventsStore, getAncestor).map;\r\n      if (mapOfTypes.has(type)) {\r\n        [...mapOfTypes.get(type).entries()].forEach((typeEntry) => {\r\n          const [eventID, handle] = typeEntry;\r\n          handle({\r\n            target,\r\n            roleSet: target[this.parentKey] || this.elementsMap.get(target).belong,\r\n            type,\r\n            event,\r\n            eventID,\r\n          });\r\n        });\r\n      }\r\n      const grandAncestorEntry = this.elementsMap.get(getAncestor);\r\n      if (grandAncestorEntry) {\r\n        stageCallback(target, type, event, grandAncestorEntry.belong);\r\n      }\r\n    };\r\n\r\n    return (event = {}) => {\r\n      stageCallback(target, type, this.applyDefaultPropagation(event));\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {EventsWork} this\r\n   * @param {Element} target\r\n   * @param {string} type\r\n   */\r\n  addCallback(target, type) {\r\n    const elementEntry = this.elementsMap.get(target);\r\n    const setOfTypes = EventsWork.getSomeFromDeep(elementEntry, 'types', () => new Set());\r\n    if (!setOfTypes.has(type)) {\r\n      if (this.routine.interpretTarget(target)) {\r\n        this.routine.interpretTarget(target).addEventListener(type, this.getCallback(target, type));\r\n      }\r\n      setOfTypes.add(type);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {UnitClass} parent\r\n   * @param {string} type\r\n   */\r\n  addCallbackToChildren(parent, type) {\r\n    if (parent.size > 0) {\r\n      const mapOfIDs = EventsWork.getFromDeepMap(this.eventsStore, parent).next(type).map;\r\n      if (mapOfIDs.size === 0) {\r\n        [...parent].forEach((element) => {\r\n          // eslint-disable-next-line\r\n          if (element instanceof this.RoleSet) {\r\n            this.addCallbackToChildren(element, type);\r\n          } else {\r\n            this.addCallback(element, type);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function returns the list of types of events the ancestors\r\n   * of the element have handles of whom.\r\n   *\r\n   * @param {EventsWork} context\r\n   * @param {RoleSet} roleSet\r\n   * @param {*[]} types\r\n   * @returns {*[]}\r\n   */\r\n  combineTypes(roleSet, types = []) {\r\n    let collectedTypes = types.concat(\r\n      [...EventsWork.getFromDeepMap(this.eventsStore, roleSet).map.keys()].filter(\r\n        type => typeof type === 'string',\r\n      ),\r\n    );\r\n    const parentEntry = this.elementsMap.get(roleSet);\r\n    if (parentEntry) {\r\n      collectedTypes = this.combineTypes(parentEntry.belong, collectedTypes);\r\n    }\r\n    return collectedTypes;\r\n  }\r\n\r\n  invokeRoleSetClass() {\r\n    const parentClass = this;\r\n\r\n    return class RoleSet extends Set {\r\n      /**\r\n       *Creates an instance of RoleSet.\r\n       * @param {Set|Array} list\r\n       */\r\n      constructor(elements) {\r\n        super(elements);\r\n        if (elements) {\r\n          elements.forEach((e) => {\r\n            parentClass.elementsMap.set(e, { belong: this });\r\n          });\r\n        }\r\n        parentClass.onAddElementActionsMap.set(this, () => {});\r\n        // eslint-disable-next-line\r\n        parentClass.eventChain(\r\n          {\r\n            roleSet: this,\r\n            type: parentClass.addElementEventType,\r\n            action: (...args) => {\r\n              parentClass.onAddElementActionsMap.get(this)(...args);\r\n            },\r\n          },\r\n          Symbol('@@elementAdded'),\r\n        );\r\n      }\r\n\r\n      /**\r\n       *\r\n       *\r\n       * @param {Element} element\r\n       */\r\n      addElement(element) {\r\n        if (this.has(element)) {\r\n          return this;\r\n        }\r\n        this.add(element);\r\n        // prettier-ignore\r\n        const elementEntry = EventsWork.getSomeFromDeep(\r\n          parentClass.elementsMap,\r\n          element,\r\n          () => (element instanceof RoleSet ? {} : { types: new Set() }),\r\n        );\r\n        if (elementEntry.belong) {\r\n          elementEntry.belong.delete(element);\r\n        }\r\n        elementEntry.belong = this;\r\n        const types = parentClass.combineTypes(this);\r\n        types.forEach((type) => {\r\n          if (element instanceof RoleSet) {\r\n            parentClass.addCallbackToChildren(element, type);\r\n          } else {\r\n            parentClass.addCallback(element, type);\r\n          }\r\n        });\r\n        // eslint-disable-next-line\r\n        parentClass.fireEvent(\r\n          new Set([element]),\r\n          parentClass.addElementEventType,\r\n          parentClass.managePropagation({}, { stopBubbling: true, stopPropagatingNested: true }),\r\n        );\r\n        return this;\r\n      }\r\n\r\n      deleteElement(element) {\r\n        this.delete(element);\r\n        parentClass.elementsMap.get(element).belong = null;\r\n        return this;\r\n      }\r\n\r\n      addElements(elements) {\r\n        elements.forEach(e => this.addElement(e));\r\n        return this;\r\n      }\r\n\r\n      clearElements() {\r\n        [...this].forEach(e => this.deleteElement(e));\r\n        return this;\r\n      }\r\n    };\r\n  }\r\n\r\n  setActionOnAddElement(roleSet, action) {\r\n    this.onAddElementActionsMap.set(roleSet, action);\r\n    return roleSet;\r\n  }\r\n\r\n  static invokePromiseHandle() {\r\n    let promiseHandle;\r\n    const promise = new Promise((resolve) => {\r\n      promiseHandle = resolve;\r\n    });\r\n    return { promise, promiseHandle };\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {UnitClass} roleSet\r\n   * @param {string} type\r\n   * @param {Symbol} eventID\r\n   * @returns\r\n   * @memberof EventsWork\r\n   */\r\n  waitGroupEvent(roleSet, type, eventID) {\r\n    const { promise, promiseHandle } = EventsWork.invokePromiseHandle();\r\n    if (typeof type === 'string') {\r\n      this.addCallbackToChildren(roleSet, type);\r\n    }\r\n    EventsWork.getFromDeepMap(this.eventsStore, roleSet)\r\n      .next(type)\r\n      .map.set(eventID, promiseHandle);\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {(Element|UnitClass)} target\r\n   * @param {string} type\r\n   * @param {Object} _event\r\n   * @memberof EventsWork\r\n   */\r\n  fireEvent(target, type, event = {}) {\r\n    this.applyDefaultPropagation(event);\r\n    if (target instanceof Set) {\r\n      let toProcess;\r\n      if (target.size > 0) {\r\n        toProcess = [...target];\r\n      } else {\r\n        // If target is empty RoleSet the object with signal property is passing to callback\r\n        toProcess = [{ [this.nullKey]: true, [this.parentKey]: target }];\r\n      }\r\n      toProcess.forEach((e) => {\r\n        if (!(event[this.propagationKey].stopPropagatingNested && e instanceof this.RoleSet)) {\r\n          this.queueData.push({ target: e, type, event });\r\n          const countType = this.countTypesInQueue.get(type);\r\n          this.countTypesInQueue.set(type, countType ? countType + 1 : 1);\r\n        }\r\n      });\r\n      this.getCallback(\r\n        { [this.nullKey]: true, [this.parentKey]: this.worker },\r\n        this.fireFromQueueType,\r\n      )();\r\n    } else {\r\n      this.getCallback(target, type)(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @typedef {Onject} DataToAction\r\n   * @property {Element} target\r\n   * @property {Object} event\r\n   * @property {Symbol} eventID\r\n   * @property {UnitClass} roleSet\r\n   * @property {string} type\r\n   */\r\n\r\n  /**\r\n   * @function\r\n   * @name ToDoIfFired\r\n   * @param {DataToAction} sendToAct\r\n   */\r\n\r\n  /**\r\n   * @function\r\n   * @name IfTerminate\r\n   * @param {DataToAction} analyzeIt\r\n   */\r\n\r\n  /**\r\n   * @typedef {Object} ChainInit\r\n   * @property {UnitClass|Set} roleSet\r\n   * @property {string} type\r\n   * @property {ToDoIfFired} action\r\n   * @property {?IfTerminate} checkIfTerminate\r\n   */\r\n\r\n  /**\r\n   * @param {ChainInit} description\r\n   * @param {?Symbol} eventID\r\n   * @returns {UnitClass}\r\n   * @memberof EventsWork\r\n   */\r\n  eventChain(description, eventID) {\r\n    const {\r\n      roleSet, type, action, typeRegistered,\r\n    } = description;\r\n    const checkIfTerminate = description.checkIfTerminate || (() => false);\r\n    const furtherDescription = { ...description, checkIfTerminate };\r\n    if (!(typeRegistered || typeof type === 'string' || this.customEventTypes.has(type))) {\r\n      this.registerEventType(type);\r\n      furtherDescription.typeRegistered = true;\r\n    }\r\n    let getID = eventID;\r\n    if (!eventID) {\r\n      getID = typeof type === 'string'\r\n        ? Symbol(`${type}-eventID`)\r\n        : Symbol(`${type.description}-eventID`);\r\n    }\r\n    this.waitGroupEvent(roleSet, type, getID).then((arg) => {\r\n      const { target, event } = arg;\r\n      // Check if target is subject of situation of preventing bubbling.\r\n      // In this case we check if target was already processing.\r\n      // So this is a criteria that further processing is a bubbling.\r\n      if (\r\n        event[this.propagationKey].stopBubbling\r\n        && event[this.propagationKey].stopBubbling.has(target)\r\n      ) {\r\n        this.eventChain(furtherDescription, getID);\r\n      } else if (checkIfTerminate(arg)) {\r\n        this.eventsStore\r\n          .get(roleSet)\r\n          .get(type)\r\n          .delete(getID);\r\n      } else {\r\n        action(arg);\r\n        if (event[this.propagationKey].stopBubbling) {\r\n          event[this.propagationKey].stopBubbling.add(target);\r\n        }\r\n        this.eventChain(furtherDescription, getID);\r\n      }\r\n    });\r\n    return eventID;\r\n  }\r\n\r\n  waitWhenTypeExhausted(type) {\r\n    let getType = type;\r\n    if (type === 'onAddElement') {\r\n      getType = this.addElementEventType;\r\n    }\r\n    if (this.countTypesInQueue.get(getType)) {\r\n      const { promise, promiseHandle } = EventsWork.invokePromiseHandle();\r\n      // Register the promise handle to exhaustTypesMap\r\n      this.exhaustTypesMap.set(getType, promiseHandle);\r\n      return promise;\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n}\r\n\r\nconst {\r\n  RoleSet,\r\n  defineRoutine,\r\n  managePropagation,\r\n  stopBubbling,\r\n  stopPropagatingNested,\r\n  setActionOnAddElement,\r\n  fireEvent,\r\n  eventChain,\r\n  waitWhenTypeExhausted,\r\n} = new EventsWork();\r\n\r\nexport default EventsWork;\r\n\r\nexport {\r\n  RoleSet,\r\n  defineRoutine,\r\n  managePropagation,\r\n  stopBubbling,\r\n  stopPropagatingNested,\r\n  setActionOnAddElement,\r\n  fireEvent,\r\n  eventChain,\r\n  waitWhenTypeExhausted,\r\n};\r\n","/* eslint-env browser */\r\n\r\nconst cellStyle = {\r\n  border: '1px solid black',\r\n  width: '3rem',\r\n  height: '3rem',\r\n  position: 'relative',\r\n  display: 'inline-block',\r\n  'background-color': 'white',\r\n};\r\nconst markAsWinStyle = { 'background-color': 'Khaki' };\r\n\r\nexport function resetCell() {\r\n  while (this.node.firstChild) {\r\n    this.node.removeChild(this.node.firstChild);\r\n  }\r\n  Object.assign(this.node.style, cellStyle);\r\n  return this;\r\n}\r\n\r\nexport function markX() {\r\n  const commonStyle = {\r\n    position: 'absolute',\r\n    left: '-0.24rem',\r\n    top: '1.24rem',\r\n    width: '3rem',\r\n    height: '0',\r\n    border: '0.3rem solid RoyalBlue',\r\n    backgroundColor: 'RoyalBlue',\r\n    margin: '0',\r\n    'border-radius': '0.3rem',\r\n  };\r\n  const first = document.createElement('div');\r\n  const second = document.createElement('div');\r\n  Object.assign(first.style, commonStyle, { transform: 'rotate(45deg)' });\r\n  Object.assign(second.style, commonStyle, { transform: 'rotate(135deg)' });\r\n  this.resetCell();\r\n  this.node.appendChild(first);\r\n  this.node.appendChild(second);\r\n  return this;\r\n}\r\n\r\nexport function markO() {\r\n  const o = document.createElement('div');\r\n  const oStyle = {\r\n    position: 'absolute',\r\n    left: '0.15rem',\r\n    top: '0.15rem',\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    border: '0.6rem solid Red',\r\n    margin: '0',\r\n    'border-radius': '2.1rem',\r\n  };\r\n  Object.assign(o.style, oStyle);\r\n  this.resetCell();\r\n  this.node.appendChild(o);\r\n  return this;\r\n}\r\n\r\nexport function markAsWin() {\r\n  Object.assign(this.node.style, markAsWinStyle);\r\n}\r\n\r\nexport function createCell() {\r\n  const cell = document.createElement('div');\r\n  Object.assign(cell.style, cellStyle);\r\n  return cell;\r\n}\r\n","/* eslint-env browser */\r\n\r\nexport const matrixContainer = document.createElement('div');\r\n\r\nfunction buildMatrix(Cell) {\r\n  const matrix = [];\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    const cell = new Cell();\r\n    matrixContainer.appendChild(cell.node);\r\n    matrix.push(cell);\r\n    if ((i + 1) % 3 === 0) {\r\n      matrixContainer.appendChild(document.createElement('br'));\r\n    }\r\n  }\r\n\r\n  return matrix;\r\n}\r\n\r\nexport default buildMatrix;\r\n","/* eslint-env browser */\r\nconst messageContainerStyle = {\r\n  height: '3rem',\r\n};\r\n\r\nconst textMessageStyle = {\r\n  'line-height': '2rem',\r\n  'font-style': 'italic',\r\n  color: 'Red',\r\n  'font-size': '1.5rem',\r\n};\r\n\r\nexport const messageContainer = document.createElement('div');\r\nObject.assign(messageContainer.style, messageContainerStyle);\r\n\r\nfunction clearMessages() {\r\n  while (messageContainer.firstChild) {\r\n    messageContainer.removeChild(messageContainer.firstChild);\r\n  }\r\n}\r\n\r\nfunction postTextMessage(str) {\r\n  const message = document.createElement('div');\r\n  message.appendChild(document.createTextNode(str));\r\n  Object.assign(message.style, textMessageStyle);\r\n  clearMessages();\r\n  messageContainer.appendChild(message);\r\n  window.setTimeout(clearMessages, 1500);\r\n}\r\n\r\nexport default postTextMessage;\r\n","/* eslint-env browser */\r\n\r\nconst buttonStyle = {\r\n  width: '7rem',\r\n  height: '2rem',\r\n};\r\nconst restartButton = document.createElement('button');\r\nrestartButton.innerText = 'Restart';\r\nObject.assign(restartButton.style, buttonStyle);\r\n\r\nexport default restartButton;\r\n","/* eslint-env browser */\r\nimport {\r\n  RoleSet, eventChain, setActionOnAddElement, defineRoutine,\r\n} from 'drama-core';\r\nimport {\r\n  createCell, resetCell, markX, markO, markAsWin,\r\n} from './cell';\r\nimport buildMatrix from './matrix';\r\nimport postTextMessage from './messages';\r\nimport analyzePossibleWin from './analyzePossibleWin';\r\nimport restartButton from './restartButton';\r\n\r\n// Define the class of cells that the board of tic-tac-toe\r\n// game consists of\r\nclass Cell {\r\n  constructor() {\r\n    this.node = createCell();\r\n  }\r\n}\r\n\r\n// interpretTarget property of the parameter passed to\r\n// defineRoutine defines the way to reach the DOM element of\r\n// event targets\r\ndefineRoutine({ interpretTarget: e => e.node });\r\n\r\n// Define the messages strings\r\nconst cellMarkedMessage = 'The cell is already set';\r\nconst gameOverMessage = 'Game is over';\r\nconst winMessages = ['X won', 'O won'];\r\n\r\n// Define the names of methods that mark cells as X and O\r\nconst turns = ['markX', 'markO'];\r\n\r\n// Add methods to the Cell class that mark a cell as X and\r\n// O, method that marks a cell as a part of a wining line,\r\n// and one that resets a cell to the empty state\r\nObject.assign(Cell.prototype, {\r\n  [turns[0]]: markX,\r\n  [turns[1]]: markO,\r\n  markAsWin,\r\n  resetCell,\r\n});\r\n\r\n// Build the board of the game\r\nconst gameMatrix = buildMatrix(Cell);\r\n\r\n// Define the RoleSet containing empty cells (in the\r\n// beginning of the game all cells are empty)\r\nconst emptyCells = new RoleSet(gameMatrix);\r\n\r\n// Define a function keeping the record of marked cells (for\r\n// each type of marks)\r\nfunction keepState(cell, filledCells) {\r\n  const cellN = gameMatrix.indexOf(cell);\r\n  return [...filledCells, cellN].sort((a, b) => a - b);\r\n}\r\n\r\n// Define two empty RoleSet's for X and O\r\nconst xAndOs = turns.map((turn, i) => {\r\n  const set = new RoleSet();\r\n  // Define action for the event when a new element is being\r\n  // added to RoleSet\r\n  setActionOnAddElement(\r\n    set,\r\n    (() => {\r\n      // Keep the record of marked cells in closure\r\n      let filledCells = [];\r\n      return ({ target, roleSet }) => {\r\n        // Reset the record when the first element is added\r\n        if (roleSet.size === 1) {\r\n          filledCells = [];\r\n        }\r\n\r\n        // Mark the cell\r\n        target[turn]();\r\n\r\n        // Add the cell to the record\r\n        filledCells = keepState(target, filledCells);\r\n\r\n        // Check if the state of win exists\r\n        const possibleWin = analyzePossibleWin(filledCells);\r\n\r\n        // If analyzePossibleWin returns an array of cells\r\n        // set them the win state\r\n        if (possibleWin) {\r\n          emptyCells.clearElements();\r\n          xAndOs.clearElements();\r\n          possibleWin.forEach((n) => {\r\n            gameMatrix[n].markAsWin();\r\n          });\r\n\r\n          // Post the message saying who wins\r\n          postTextMessage(winMessages[i]);\r\n\r\n          // otherwise check if all cells are marked\r\n        } else if (emptyCells.size === 0) {\r\n          // Clear elements from the both sets and post the\r\n          // message that the game is over\r\n          xAndOs.clearElements();\r\n          postTextMessage(gameOverMessage);\r\n        }\r\n      };\r\n    })(),\r\n  );\r\n\r\n  // Define the action for the event of 'click' type\r\n  eventChain({\r\n    roleSet: set,\r\n    type: 'click',\r\n    action() {\r\n      // Post the message that the cell is occupied\r\n      postTextMessage(cellMarkedMessage);\r\n    },\r\n  });\r\n\r\n  return set;\r\n});\r\n\r\n// Add the method that clear both (X and O) RoleSets\r\nxAndOs.clearElements = function () {\r\n  this.forEach(set => set.clearElements());\r\n};\r\n\r\n// Define the function that sets the state of a cell and\r\n// returns the next turn (for X or O)\r\nfunction setCell(currentTurn, cell) {\r\n  xAndOs[currentTurn].addElement(cell);\r\n  return 1 - currentTurn;\r\n}\r\n\r\n// Define the action for the event of 'click' type\r\neventChain({\r\n  roleSet: emptyCells,\r\n  type: 'click',\r\n  action: ((firstTurn) => {\r\n    // Store the current turn in closure\r\n    let currentTurn = firstTurn;\r\n    return ({ target, roleSet }) => {\r\n      // Check if the game has just begun and reset the\r\n      // first turn\r\n      if (roleSet.size === 9) {\r\n        currentTurn = firstTurn;\r\n      }\r\n      currentTurn = setCell(currentTurn, target);\r\n    };\r\n  })(0),\r\n});\r\n\r\n// Define the action that restarts the game\r\nrestartButton.onclick = () => {\r\n  // Reset all cells\r\n  gameMatrix.forEach(cell => cell.resetCell());\r\n\r\n  // and add them to the initial RoleSet\r\n  emptyCells.addElements(gameMatrix);\r\n};\r\n","export default function analyzePossibleWin(filledCells) {\r\n  const winPatterns = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (const pattern of winPatterns) {\r\n    let winCells = [];\r\n    for (const cellN of pattern) {\r\n      if (filledCells.includes(cellN)) {\r\n        winCells.push(cellN);\r\n      } else {\r\n        winCells = [];\r\n        break;\r\n      }\r\n    }\r\n    if (winCells.length > 0) {\r\n      return winCells;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","/* eslint-env browser */\r\nimport { matrixContainer } from './matrix';\r\nimport { messageContainer } from './messages';\r\nimport restartButton from './restartButton';\r\n\r\nexport default function createStage() {\r\n  const stageStyle = {\r\n    'line-height': '0',\r\n    'box-sizing': 'content-box',\r\n  };\r\n  const stage = document.createElement('div');\r\n  Object.assign(stage.style, stageStyle);\r\n\r\n  stage.appendChild(matrixContainer);\r\n  stage.appendChild(messageContainer);\r\n  stage.appendChild(restartButton);\r\n\r\n  return stage;\r\n}\r\n","import './src/tic-tac-toe';\r\n\r\nexport { default } from './src/stage';\r\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nmodule.exports = require('./_collection')(MAP, function (get) {\n  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = strong.getEntry(validate(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, strong, true);\n"],"sourceRoot":""}